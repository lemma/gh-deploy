#!/bin/bash -e
#
#/gh-deploy [REF] [[FLAGS]]
#/
#/  Create a GitHub Deployment via the API.
#/
#/  FLAGS:
#/
#/    -a,--auto-merge          Auto-merge the default branch into the requested ref if it is behind the default branch
#/    -c,--required-contexts   A comma seperated list of status contexts verified against commit status checks
#/    -d,--description         Short description
#/    -e,--environment         Name for the target deployment environment
#/    -o,--owner               Owner name
#/    -p,--payload             JSON payload with extra information about the deployment
#/    -r,--repo                Repo name
#/    -t,--task                The named task to execute
#/    -v,--verbose             Verbose output
#/    -h,--help                Show this usage
#/


function usage() {
  awk '/^#\// { print $0 }' $0 | cut -c 3-
}

if [[ -z "$GITHUB_OAUTH_TOKEN" ]] ; then
  cat <<-WARN >&2
Error, unable to locate oauth token.

Please set the GITHUB_OAUTH_TOKEN environment variable.
WARN

  exit 1
fi

if [[ -z "$(which curl)" ]] ; then
  cat <<-WARN >&2
Error, unable to locate the curl command.
WARN

  exit 1
fi

args=()
while [[ -n "$1" ]] ; do
  case "$1" in
    (-a | --auto-merge ) automerge=true;;
    (-c | --required-contexts ) required_contexts=$2; shift;;
    (-d | --description ) description=$2; shift;;
    (-e | --environment ) environment=$2; shift;;
    (-h | --help ) usage; exit 0;;
    (-o | --owner ) owner=$2; shift;;
    (-p | --payload ) payload=$2; shift;;
    (-r | --repo ) repo=$2; shift;;
    (-t | --task ) task=$2; shift;;
    (-v | --verbose ) verbose=true;;
    (-* ) echo "Error, unrecognized flag $1" 1>&2; echo; usage; exit 1;;
    ( * ) args+=($1);;
  esac
  shift
done

ref=${args[0]:-$(git rev-parse --short HEAD)}

if [[ -z "$owner" ]] ; then
  owner="$(cat .git/config \
   | awk '$0 ~ /https:\/\/github.com\/(.+)/ { split($3,a,/\.|\//); print a[5];exit }')"
fi

if [[ -z "$repo" ]] ; then
  repo="$(cat .git/config \
   | awk '$0 ~ /https:\/\/github.com\/(.+)/ { split($3,a,/\.|\//); print a[6];exit }')"
fi

json="{\"ref\": \"${ref}\""

if [[ -n "$task" ]] ; then
  json+=", \"task\": \"${task}\""
fi

if [[ -n "$automerge" ]] ; then
  json+=", \"auto_merge\": true"
fi

if [[ -n "$required_contexts" ]] ; then
  json+=", \"required_contexts\": [\"${required_contexts/,/\",\"}\"]"
fi

if [[ -n "$payload" ]] ; then
  json+=", \"payload\": \"${payload}\""
fi

if [[ -n "$environment" ]] ; then
  json+=", \"environment\": \"${environment}\""
fi

if [[ -n "$description" ]] ; then
  json+=", \"description\": \"${description}\""
fi

json+="}"

flags=(-X POST)
flags+=(-H "Authorization: token ${GITHUB_OAUTH_TOKEN}")
flags+=(-H "Accept: application/vnd.github.cannonball-preview+json")
flags+=(-H "Content-Type: application/json")
flags+=(-d "${json}")

if [[ -n "$verbose" ]] ; then
  flags+=(-v)
fi

curl "${flags[@]}" https://api.github.com/repos/${owner}/${repo}/deployments
